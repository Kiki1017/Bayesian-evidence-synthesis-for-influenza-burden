model {
  fluhosp ~ dpois(rfluhosp*FSNpop) ## The # of flu hosp in FSN with not fatal outcome; unobserved
  FSNfluhosp ~ dbin(pt[1],fluhosp) ## Observed flu hosp. without fatal outcome
  
  rfludeathish <- rfludeath*(1-posh)
  fludeath ~ dpois(rfludeathish*FSNpop) ## The total # of flu deaths in FSN; unobserved
  
  FSNfludeath ~ dbin(pt[2],fludeath) ## Observed deaths among hospitalized influenza patents
  
  rfluhosp ~ dunif(0,1)
  rfludeath ~ dunif(0,1)
  
  oshpideath ~ dbin(posh,Npideath)
  posh ~ dunif(0,1)
  
  for (k in 1:2){
    ## pt[k] is the prob. of influenza to be detected, as a function of testing prob. und sensitivity (by outcome)
    ## The three sensitivities, test probs and flu risks correspond to the 3 diff. tests;
    ## the 4th flu risk and 'test prob' represents those not tested
    
    pt[k] <- ptestarr[k,1]*sensarr[k,1] + ptestarr[k,2]*sensarr[k,2] + 
      ptestarr[k,3]*sensarr[k,3]
    
    nttypearr[k,] ~ dmulti(ptestarr[k,1:4],ntot[k])   ### Observed testing freqs
    
    ## priors for testing 
    ptest10[k] ~ dunif(0,1)
    ptest20[k] ~ dunif(0,1)
    ptest30[k] ~ dunif(0,1)
    ptest40[k] ~ dunif(0,1)
    ptot[k] <- ptest10[k] + ptest20[k] + ptest30[k] + ptest40[k]
    
    ptestarr[k,1] <- ptest10[k]/ptot[k]
    ptestarr[k,2] <- ptest20[k]/ptot[k]
    ptestarr[k,3] <- ptest30[k]/ptot[k]
    ptestarr[k,4] <- ptest40[k]/ptot[k]
    
    pflu[k] ~ dunif(0,1)
    
    for (m in 1:3) {
      fluposarr[k,m] ~ dbin(pflu[k],nttypearr[k,m]) ## actual flu pos/test type, unobserved
      testposarr[k,m] ~ dbin(sensarr[k,m],fluposarr[k,m]) ## observed flu pos/test type
    }
    
    ## generating a sensitvity from the given distribution
    sens1[k] ~ dnorm(pcrsens[1],1/(pcrsens[2]*pcrsens[2]))
    logsens2[k] ~ dnorm(lrapidsens[1],1/(lrapidsens[2]*lrapidsens[2]))I(,0)
    sens2[k] <- exp(logsens2[k])
    sens3[k] ~ dunif(0,1)
    
    sensarr[k,1] <- sens1[k]
    sensarr[k,2] <- sens2[k]
    sensarr[k,3] <- sens3[k]
  }    
}
